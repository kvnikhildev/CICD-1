pipeline {
    agent any

    environment {
        SONARQUBE = 'sonar-server' // Name from Jenkins > Manage Jenkins > Configure System
        SONAR_PROJECT_KEY = 'my_node_project'
        SONAR_TOKEN = credentials('sonarqube') // Use Jenkins credentials plugin
    }

    
    stages {

        stage('git check out ') {
            steps {
               git branch: 'main', url: 'https://github.com/kvnikhildev/CICD-1.git'
            }
        }


        stage('build') {
            steps {
                sh 'docker build -t node-webv1 .'
            }
        }

        stage('test') {
            steps {
                sh 'npm audit $$ npm test'
            }
        }

        stage('Static Code Analysis') {
            
            steps {
            withSonarQubeEnv("${SONARQUBE}") {
                    sh """
                        npx sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.sources=app.js \
                        -Dsonar.tests=test.js \
                        -Dsonar.exclusions=onar-project.properties,Dockerfile,jenkinfile,,**/node_modules/**,package-lock.json,package.json
                        
                    """ 
                    }

            }
        }

        stage('Build and Push Docker Image') {
           environment {
           DOCKER_IMAGE = "kvnikhill/nodeproject1:${BUILD_NUMBER}"
           
          
           }
            steps {
                 script {
                        
                         sh 'docker build -t ${DOCKER_IMAGE} .'
                         def dockerImage = docker.image("${DOCKER_IMAGE}")
                         docker.withRegistry('https://index.docker.io/v1/',"docker-hub") {
                         dockerImage.push()
                           
                    }
                 }
            }  
        }
    }

}
    